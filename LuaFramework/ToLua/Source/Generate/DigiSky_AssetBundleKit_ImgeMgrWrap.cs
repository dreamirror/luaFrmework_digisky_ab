//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DigiSky_AssetBundleKit_ImgeMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DigiSky.AssetBundleKit.ImgeMgr), typeof(System.Object));
		L.RegFunction("loadImge", loadImge);
		L.RegFunction("LoadScene", LoadScene);
		L.RegFunction("LoadSceneAsyncCall", LoadSceneAsyncCall);
		L.RegFunction("New", _CreateDigiSky_AssetBundleKit_ImgeMgr);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDigiSky_AssetBundleKit_ImgeMgr(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				DigiSky.AssetBundleKit.ImgeMgr obj = new DigiSky.AssetBundleKit.ImgeMgr();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: DigiSky.AssetBundleKit.ImgeMgr.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int loadImge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			UnityEngine.Texture2D o = DigiSky.AssetBundleKit.ImgeMgr.loadImge(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadScene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			DigiSky.AssetBundleKit.ImgeMgr.LoadScene(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadSceneAsyncCall(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			DigiSky.AssetBundleKit.ImgeMgr.LoadSceneAsyncCall(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

